➤ NGINX configuration file is that it appears to be organized in a treelike structure, defined by sets of brackets ‘{ }’. 
➤ The block that these brackets define are called “contexts”. 
➤ Contexts can be layered within One-Another. 
➤ Specific value defined in context is called Directive.

Main        mail
Event,HTTP, mail
      Server   Upstream
      Location

Main Configuration Block (nginx.conf): The central settings area for Nginx, where global configurations are defined for the entire server.

Events: Manages how Nginx handles events, like client connections and worker processes, influencing how it efficiently manages incoming requests.

HTTP: Provides a space for defining configurations related to serving websites and web applications via HTTP protocols.

Server Block: Represents an individual website or application, containing its unique settings like domain, port, and behavior.

Location Block: Customizes how Nginx processes requests for specific URLs, allowing distinct actions for different paths within a server.

Upstream: Organizes multiple backend servers, often used for load balancing and proxying to distribute incoming requests.

Mail: A module that lets Nginx handle mail protocols like SMTP and IMAP, useful for proxying and balancing mail-related traffic.
---------------------------------------------------------------

user nginx;
worker_processes auto;
error_log /var/log/nginx/error.log;
pid /run/nginx.pid;

events {
    worker_connections 1024;
}

http {
    include /etc/nginx/mime.types;
    default_type application/octet-stream;
    log_format main '$remote_addr - $remote_user [$time_local] "$request" '
                    '$status $body_bytes_sent "$http_referer" '
                    '"$http_user_agent" "$http_x_forwarded_for"';
    access_log /var/log/nginx/access.log main;

    sendfile on;
    tcp_nopush on;
    tcp_nodelay on;
    keepalive_timeout 65;
    types_hash_max_size 2048;

    include /etc/nginx/conf.d/*.conf;
    include /etc/nginx/sites-enabled/*;
}

-------------------------------------------------------------------------

Main Context: The most general context is the “main” or “global” context. It 
is the only context that is not contained within the typical context blocks. 

➤ The main context represents the broadest environment for Nginx 
configuration. It is used to configure details that affect the entire 
application on a basic level. 

➤ Some common details that are configured in the main context are the user 
and group to run the worker processes as, the number of workers, and the 
file to save the main process’s PID.

the following is main context:

user nginx;
worker_processes auto;
error_log /var/log/nginx/error.log;
pid /run/nginx.pid;


--------------------------------------------------------------------------
child of main,no. of worker connections
➤ Events Context: The “events” context is contained within the “main” 
context. It is used to set global options that affect how Nginx handles 
connections at a general level.
➤ Nginx uses an event-based connection processing model, so the directives 
defined within this context determine how worker processes should handle 
connections

---------------------------------------------------------------------------
lengthy
➤ HTTP Context: This context will contain all of the directives and other 
contexts necessary to define how the program will handle HTTP or 
HTTPS connections. 
   ➤ HTTP context is a sibling of the events context, so they should be 
     listed side-by-side, rather than nested. 
----------------------------------------
➤ Server Context: This context is declared within the “http” context.
   ➤ User can have as many server blocks as you need, each of which can 
      handle a specific subset of connections. 
---------------------------------------
➤ Location Context: Location blocks live within server contexts and, 
unlike server blocks, can be nested inside one another.

   ➤ This can be useful for creating a more general location context to catch 
     a certain subset of traffic, and then further processing it based on 
     more specific criteria with additional contexts inside.
-----------------------------------------
➤ Upstream Context: This context is used to define and 
configure “upstream” servers. 
   ➤ The upstream context should be placed within the http 
     context, outside of any specific server contexts. 
   ➤ This context defines a named pool of servers that Nginx 
      can then proxy requests to.
-----------------------------------------
➤ Mail Context: Function of the mail context is to provide an 
  area for configuring a mail proxying solution on the server. 
  ➤ The mail context is defined within the “main” or “global” 
     context.

