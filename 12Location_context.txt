
➤ Location Context: Location blocks live within server blocks 
(or other location blocks) and are used to decide how to 
process the request URI. 

➤ Syntax: 
location optional_modifier location_match { 
}



➤ location_match: Defines what Nginx should check the request URI against.

    ➤ The existence or nonexistence of the modifier, affects the way that the Nginx attempts to 
      match the location block. 


➤ The modifiers below will cause the associated location block to be interpreted as follows: 
-------------------------------------------------------------------------------------------
➤ (none): If no modifiers are present, the location is interpreted as a prefix match. This 
means that the location given will be matched against the beginning of the request 
URI to determine a match. 

go to your nginx.conf file

events {
}

http { 
        
    include mine.types;
 
    server{
      
       listen 8081;
       server_name ip_address/domain;
       root /bloggingtemplate/;

       location /contactUs {
               return 200 "Hello! you are inside custom location!!!";
       }
}
}


now do: nginx -s reload
now do: go to the browser and do: ip:8081/contactUs

check the logs tail -f /var/logs/*  --> running fine!!!!!!


now try for ip:8081/contactUs/about/anything
even this will work as you haven't define the modifier
--------------------------------------------------------------------------------------

➤ =: If an equal sign is used, this block will be considered a match if the request URI 
exactly matches the location given. 



events {
}

http { 
        
    include mine.types;
 
    server{
      
       listen 8081;
       server_name ip_address/domain;
       root /bloggingtemplate/;

       location = /contactUs {
               return 200 "Hello! you are inside custom location!!!";
       }
}
}

do: nginx -s reload
do: go to the ip:8081/contactUs --> this will work
do: go to the ip:8081/contactUs/hello --> this won't work!!
--------------------------------------------------------------------------------------
➤ ~: If a tilde modifier is present, this location will be interpreted as a case-sensitive 
regular expression match. 
--------------------------------------------------------------------------------------
➤ ~*: If a tilde and asterisk modifier is used, the location block will be interpreted as a 
case-insensitive regular expression match. 
--------------------------------------------------------------------------------------
➤ ^~: If a carat and tilde modifier is present, and if this block is selected as the best 
non-regular expression match, regular expression matching will not take place.

--------------------------------------------------------------------------------------
➤ Priority of Modifiers: Nginx chooses the location that will be 
used to serve a request in a similar fashion to how it selects a 
server block. It runs through a process that determines the 
best location block for any given request. 

➤ Understanding this process is a crucial requirement in being 
able to configure Nginx reliably and accurately. 

1. Exact Match = URI 
2. Preferential Prefix Match ^~ URI 
3. REGEX Match. ~* URI